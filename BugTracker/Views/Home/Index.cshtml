@model BugTracker.Models.ViewModels.DashboardViewModel
@using BugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTImageService ImageService
@inject IBTRolesService RolesService


@{
    ViewData["Title"] = "Dashboard";
    BTUser btUser = await UserManager.GetUserAsync(User);
}



@* Get The btUser FullName *@
<strong>@btUser.FullName</strong>
<span class="text-muted" style="font-size:x-small;">
    @* Company Name *@
    <strong>@Model.Company.Name</strong>
</span>

<!-- Info Pills -->
<div class="row">
    <div class="col-xl-3 col-md-6">
        <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
            <div class="card card-stats">
                <!-- Card body -->
                <div class="card-body">

                    <div class="row">
                        <div class="col">

                            <h5 class="card-title text-uppercase text-muted mb-0">Active Projects</h5>
                            <span class="h2 font-weight-bold mb-0">@Model.Projects.Count(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now)</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-gradient-orange text-white rounded-circle shadow">
                                <i class="ni ni-single-copy-04"></i>
                            </div>
                        </div>
                    </div>
                    @*<p class="mt-3 mb-0 text-sm">
                    <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                    <span class="text-nowrap">Since last month</span>
                    </p>*@
                </div>
            </div>
        </a>
    </div>
    <div class="col-xl-3 col-md-6">
        <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
            <div class="card card-stats">
                <!-- Card body -->
                <div class="card-body">

                    <div class="row">
                        <div class="col">

                            <h5 class="card-title text-uppercase text-muted mb-0">Total Tickets</h5>
                            <span class="h2 font-weight-bold mb-0">@Model.Tickets.Count()</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-gradient-red text-white rounded-circle shadow">
                                <i class="ni ni-chart-pie-35"></i>
                            </div>
                        </div>
                    </div>
                    @*<p class="mt-3 mb-0 text-sm">
                    <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                    <span class="text-nowrap">Since last month</span>
                    </p>*@
                </div>
            </div>
        </a>
    </div>
    <div class="col-xl-3 col-md-6">
        <a asp-action="UnassignedTickets" asp-controller="Tickets" style="text-decoration:none">
            <div class="card card-stats">
                <!-- Card body -->
                <div class="card-body">

                    <div class="row">
                        <div class="col">

                            <h5 class="card-title text-uppercase text-muted mb-0">Unassigned Tickets</h5>
                            <span class="h2 font-weight-bold mb-0">@Model.Tickets.Count(t => string.IsNullOrEmpty(t.DeveloperUserId))</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-gradient-green text-white rounded-circle shadow">
                                <i class="ni ni-tag"></i>
                            </div>
                        </div>
                    </div>
                    @*<p class="mt-3 mb-0 text-sm">
                    <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                    <span class="text-nowrap">Since last month</span>
                    </p>*@
                </div>
            </div>
        </a>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="card card-stats">
            <!-- Card body -->
            <div class="card-body">

                <div class="row">
                    <div class="col">

                        <h5 class="card-title text-uppercase text-muted mb-0">Total Data</h5>
                        <span class="h2 font-weight-bold mb-0">
                            @(
                                Model.Projects.Count()
                                + Model.Tickets.Count()
                                + Model.Members.Count()
                                )
                        </span>
                    </div>
                    <div class="col-auto">
                        <div class="icon icon-shape bg-gradient-info text-white rounded-circle shadow">
                            <i class="ni ni-archive-2"></i>
                        </div>
                    </div>
                </div>
                @*<p class="mt-3 mb-0 text-sm">
                <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                <span class="text-nowrap">Since last month</span>
                </p>*@
            </div>
        </div>
    </div>
</div>

<!-- Info Charts -->
<div class="row">
    <div class="col-xl-6">
        <div class="card">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="text-uppercase text-muted ls-1 mb-1">[Google Charts]</h6>
                        <h5 class="h3 mb-0">Projects by Priority</h5>
                    </div>
                </div>
            </div>
            <div class="card-body text-center" style="overflow-y:auto;">
                <div id="chart3D"></div>
            </div>
        </div>
    </div>
    <div class="col-xl-6">
        <div class="card">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="text-uppercase text-muted ls-1 mb-1">[Google Charts]</h6>
                        <h5 class="h3 mb-0">Project Tickets Count (%)</h5>
                    </div>
                </div>
            </div>
            <div class="card-body text-center" style="overflow-y:auto;">
                <div id="donut"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-6">
        <div class="card">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="text-uppercase text-muted ls-1 mb-1">[Morris Charts]</h6>
                        <h5 class="h3 mb-0">Tickets by Priority</h5>
                    </div>
                </div>
            </div>
            <div class="card-body text-center" style="overflow-y:auto;">
                <div id="legend" class="donut-legend" style="font-size:x-small;max-height: 300px">
                    <span class="chart chart-md" id="morrisTicketPriority"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-6">
        <div class="card">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h6 class="text-uppercase text-muted ls-1 mb-1">[ChartJS]</h6>
                        <h5 class="h3 mb-0">Tickets by Status</h5>
                    </div>
                </div>
            </div>
            <div class="card-body" style="overflow-y:auto;">
                <!--  Chart.js Canvas Tag -->
                <canvas style="max-height: 300px" id="donutChart"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Third row Info Chart with Member Card beside it -->
<div class="row">
    <div class="col-xl-8">
        <div class="card">
            <div class="card-header bg-transparent">
                <h6 class="text-uppercase text-muted ls-1 mb-1">[Plotly]</h6>
                <h5 class="h3 mb-0">Project: Tickets vs Developers</h5>
            </div>
            <div class="card-body" style="overflow-y: auto;max-height: 450px">
                <div id="plotlyChart"></div>
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <div class="card">
            <div class="card-header">
                <h2>Members</h2>
            </div>
            <div class="card-body" style="overflow-y: auto;max-height: 450px">
                @foreach (BTUser member in Model.Members)
                {
                    <div>
                        @if (btUser?.AvatarFileData is not null)
                        {
                            <img class="avatar rounded-circle" src="@ImageService.DecodeImage(btUser.AvatarFileData, btUser.AvatarFileContentType)" />
                        }
                        else
                        {
                            <img class="avatar rounded-circle" src="/img/brand/defaultUserImage.png" />
                        }

                        <span style="font-weight: bold">@member.FullName</span>
                        <h6>@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())</h6>

                    </div>
                }
            </div>
        </div>
    </div>
</div>
<hr />

<!-- Projects Table -->
<div class="row">
    <div class="col">
        <div class="card">
            <!-- Card header -->
            <div class="card-header border-0">
                <h3 class="mb-0">Projects</h3>
            </div>
            <!-- Light table -->
            <div class="table-responsive">
                <table class="table align-items-center table-flush">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col" class="sort" data-sort="name">Project</th>
                            <th scope="col" class="sort" data-sort="date">Start Date</th>
                            <th scope="col" class="sort" data-sort="date">End Date</th>
                            <th scope="col" class="sort" data-sort="status">Priority</th>
                            <th scope="col">Users</th>
                            <th scope="col" class="sort" data-sort="completion">Completion</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody class="list">
                        @foreach (var project in Model.Projects)
                        {
                            <tr>
                                <th scope="row">
                                    <div class="media align-items-center">
                                        <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" class="avatar rounded-circle mr-3">
                                            @if (project.ImageFileData is not null)
                                            {
                                                <img alt="Image placeholder" src="@ImageService.DecodeImage(project.ImageFileData, project.ImageFileContentType)">
                                            }
                                            else
                                            {
                                                <img alt="Image placeholder" class="img-fluid" src="/img/project-icon.png">
                                            }
                                        </a>
                                        <div class="media-body">
                                            <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><span class="name mb-0 text-sm">@project.Name</span></a>
                                        </div>
                                    </div>
                                </th>
                                <td class="date">
                                    @project.StartDate.ToString("dd/MM/yyyy")
                                </td>
                                <td class="date">
                                    @project.EndDate.ToString("dd/MM/yyyy")
                                </td>
                                <td>
                                    @if (@project.ProjectPriority?.Name == "Low")
                                    {
                                        <span class="badge badge-dot mr-4">
                                            <i class="bg-success"></i>
                                            <span class="status">@project.ProjectPriority?.Name</span>
                                        </span>
                                    }
                                    @if (@project.ProjectPriority?.Name == "Medium")
                                    {
                                        <span class="badge badge-dot mr-4">
                                            <i class="bg-info"></i>
                                            <span class="status">@project.ProjectPriority?.Name</span>
                                        </span>
                                    }
                                    @if (@project.ProjectPriority?.Name == "High")
                                    {
                                        <span class="badge badge-dot mr-4">
                                            <i class="bg-warning"></i>
                                            <span class="status">@project.ProjectPriority?.Name</span>
                                        </span>
                                    }
                                    @if (@project.ProjectPriority?.Name == "Urgent")
                                    {
                                        <span class="badge badge-dot mr-4">
                                            <i class="bg-danger"></i>
                                            <span class="status">@project.ProjectPriority?.Name</span>
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="avatar-group">
                                        @foreach (var member in project.Members)
                                        {

                                            <a href="#" class="avatar avatar-sm rounded-circle" data-toggle="tooltip" data-original-title="@member.FullName">
                                                @if (member.AvatarFileData is not null)
                                                {
                                                    <img alt="Image placeholder" src="@ImageService.DecodeImage(btUser.AvatarFileData, btUser.AvatarFileContentType)">
                                                }
                                                else
                                                {
                                                    <img alt="Image placeholder" src="/img/brand/defaultUserImage.png">
                                                }
                                            </a>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span class="completion mr-2">60%</span>
                                        <div>
                                            <div class="progress">
                                                <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 60%;"></div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-right">
                                    <div class="dropdown">
                                        <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                        <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                                            <a class="dropdown-item" href="#">Action</a>
                                            <a class="dropdown-item" href="#">Another action</a>
                                            <a class="dropdown-item" href="#">Something else here</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>
            <!-- Card footer -->
            @*            <div class="card-footer py-4">
            <nav aria-label="...">
            <ul class="pagination justify-content-end mb-0">
            <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1">
            <i class="fas fa-angle-left"></i>
            <span class="sr-only">Previous</span>
            </a>
            </li>
            <li class="page-item active">
            <a class="page-link" href="#">1</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
            </li>
            <li class="page-item">
            <a class="page-link" href="#">3</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="#">
            <i class="fas fa-angle-right"></i>
            <span class="sr-only">Next</span>
            </a>
            </li>
            </ul>
            </nav>
            </div>
            *@
        </div>
    </div>
</div>

<!-- Tickets Table -->

<div class="row">
    <div class="col">
        <div class="bg-secondary">
            <div class="card m-1 p-2">
                <div class="card-header">
                    <h2>Tickets</h2>
                </div>
                <div class="card-body">
                    @* Copy and format table from Unassigned Tickets *@
                    <div class="table-responsive" style="overflow-y:auto;height:600px;">
                        <table class="table align-items-center">
                            <thead class="thead-light">
                                <tr>
                                    @* Table header *@
                                    <th scope="col" class="sort" >Title</th>
                                    <th scope="col" class="sort" >Developer</th>
                                    <th scope="col" class="sort" >Status</th>
                                    <th scope="col" class="sort" >Priority</th>
                                    <th scope="col" class="sort" >Date</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @* Table body *@
                                @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                {
                                    <tr>
                                        <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><strong>@ticket.Title</strong></a> </td>
                                        <td>
                                            @if (ticket.DeveloperUserId is not null)
                                            {
                                                @ticket.DeveloperUser.FullName
                                            }
                                            else
                                            {
                                                <a asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-id="@ticket.Id"><span class="btn btn-sm btn-outline-danger">Assign Developer</span></a>
                                            }
                                        </td>
                                        <td>
                                            @if (ticket.TicketStatus.Name == "New")
                                            {
                                                <span class="badge badge-default">@ticket.TicketStatus.Name </span>
                                            }
                                            @if (ticket.TicketStatus.Name == "Development")
                                            {
                                                <span class="badge badge-warning">@ticket.TicketStatus.Name </span>
                                            }
                                            @if (ticket.TicketStatus.Name == "Testing")
                                            {
                                                <span class="badge badge-info">@ticket.TicketStatus.Name </span>
                                            }
                                            @if (ticket.TicketStatus.Name == "Resolved")
                                            {
                                                <span class="badge badge-success">@ticket.TicketStatus.Name </span>
                                            }
                                        </td>
                                        <td>
                                            @if (@ticket.TicketPriority.Name == "Low")
                                            {
                                                <span class="badge badge-dot mr-4">
                                                    <i class="bg-success"></i>
                                                    <span class="status">@ticket.TicketPriority.Name</span>
                                                </span>
                                            }
                                                @if (@ticket.TicketPriority.Name == "Medium")
                                            {
                                                <span class="badge badge-dot mr-4">
                                                    <i class="bg-info"></i>
                                                    <span class="status">@ticket.TicketPriority.Name</span>
                                                </span>
                                            }
                                            @if (@ticket.TicketPriority.Name == "High")
                                            {
                                                <span class="badge badge-dot mr-4">
                                                    <i class="bg-warning"></i>
                                                    <span class="status">@ticket.TicketPriority.Name</span>
                                                </span>
                                            }
                                            @if (@ticket.TicketPriority.Name == "Urgent")
                                            {
                                                <span class="badge badge-dot mr-4">
                                                    <i class="bg-danger"></i>
                                                    <span class="status">@ticket.TicketPriority.Name</span>
                                                </span>
                                            }
                                        </td>
                                        <td><span style="font-size: small">@ticket.Created.ToString("dd/MM/yyyy")</span></td>
                                        <td class="text-right">
                                            <div class="dropdown">
                                                <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                                                    <a class="dropdown-item" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id">Edit</a>
                                                    <a class="dropdown-item" asp-action="Archive" asp-controller="Tickets" asp-route-id="@ticket.Id">Archive</a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
                <div class="card-footer">
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts
    {
    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //3D Pie
                    var options = {
                        title: 'Project Priority',
                        is3D: true,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }

                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Company Ticket Distribution',
                        pieHole: 0.3,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }
                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

    @* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

        var morrisDonutData = [
            {
                label: "Low",
                value: @Model.Tickets.Count(t => t.TicketPriority.Name == nameof(BTTicketPriority.Low))
                                                                                                                                                            }, {
                label: "Medium",
                value: @Model.Tickets.Count(t => t.TicketPriority.Name == nameof(BTTicketPriority.Medium))
                                                                                                                                                            }, {
                label: "High",
                value: @Model.Tickets.Count(t => t.TicketPriority.Name == nameof(BTTicketPriority.High))
                                                                                                                                                            }, {
                label: "Urgent",
                value: @Model.Tickets.Count(t => t.TicketPriority.Name == nameof(BTTicketPriority.Urgent))
                                                                                                                                                            }
        ];


        /*
        Morris: Donut
        */
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span').css('backgroundColor', donutChart.options.colors[i]).css('width', '20px').css('display', 'inline-block').css('margin', '10px');
                $('#legend').append(legendItem)
            });
        };
    </script>

    <!-- *** Begin Chart JS Pie/Donut *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>

        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatus.Development)',
                '@nameof(BTTicketStatus.New)',
                '@nameof(BTTicketStatus.Resolved)',
                '@nameof(BTTicketStatus.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets.Count(t => t.TicketStatus.Name == nameof(BTTicketStatus.Development)),
        @Model.Tickets.Count(t => t.TicketStatus.Name ==nameof(BTTicketStatus.New)),
        @Model.Tickets.Count(t => t.TicketStatus.Name ==nameof(BTTicketStatus.Resolved)),
        @Model.Tickets.Count(t => t.TicketStatus.Name ==nameof(BTTicketStatus.Testing))
                                                                                                                                                                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(255, 206, 86, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(255, 206, 86, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas,
            {
                type: 'doughnut',
                data: donutData,
                options: donutOptions
            });
    </script>
    <!-- *** End Chart JS Donut *** -->
    <!-- *** Begin AM Charts *** -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes begin
                    // Themes end

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);


                    // Add data
                    chart.data = result;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;

                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;

                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = false;
                        valueLabel.label.truncate = false;

                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;
                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** End AM Charts *** -->
    <!--  Plotly Charts  -->
    <!-- Load plotly.js into the DOM -->
    <script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/PlotlyBarChart",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                var data = result;

                var layout = { barmode: 'group' };

                Plotly.newPlot('plotlyChart', data, layout);
            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>
}
